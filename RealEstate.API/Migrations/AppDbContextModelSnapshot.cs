// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RealEstate.Infraestructure.Data;

#nullable disable

namespace RealEstate.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RealEstate.Core.Entities.Log", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("IdLog");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DateLog")
                        .HasColumnType("datetime")
                        .HasColumnName("DateCreated");

                    b.HasKey("Id")
                        .HasName("PK_Logs");

                    b.ToTable("Logs", "dbo");
                });

            modelBuilder.Entity("RealEstate.Core.Entities.Owner", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("IdOwner");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Address");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime")
                        .HasColumnName("Birthday");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Name");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("varchar(2083)")
                        .HasColumnName("Photo");

                    b.HasKey("Id")
                        .HasName("PK_Owner");

                    b.ToTable("Owner", "dbo");
                });

            modelBuilder.Entity("RealEstate.Core.Entities.Property", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("IdProperty");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Address");

                    b.Property<string>("CodeInternal")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CodeInternal");

                    b.Property<long>("IdOwner")
                        .HasColumnType("bigint")
                        .HasColumnName("IdOwner");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Price");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id")
                        .HasName("PK_Property");

                    b.HasIndex("CodeInternal")
                        .IsUnique();

                    b.HasIndex("IdOwner");

                    b.ToTable("Property", "dbo");
                });

            modelBuilder.Entity("RealEstate.Core.Entities.PropertyImage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("IdPropertyImage");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Enable")
                        .HasColumnType("bit")
                        .HasColumnName("Enable");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasColumnType("varchar(2083)")
                        .HasColumnName("File");

                    b.Property<long>("IdProperty")
                        .HasColumnType("bigint")
                        .HasColumnName("IdProperty");

                    b.HasKey("Id")
                        .HasName("PK_PropertyImage");

                    b.HasIndex("IdProperty");

                    b.ToTable("PropertyImage", "dbo");
                });

            modelBuilder.Entity("RealEstate.Core.Entities.PropertyTrace", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DateSale")
                        .HasColumnType("datetime")
                        .HasColumnName("DateSale");

                    b.Property<long>("IdProperty")
                        .HasColumnType("bigint")
                        .HasColumnName("IdProperty");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Name");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Tax");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("IdProperty");

                    b.ToTable("PropertyTrace", "dbo");
                });

            modelBuilder.Entity("RealEstate.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdUser");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime")
                        .HasColumnName("DateCreated");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("FullName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Password");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("UserName");

                    b.HasKey("Id")
                        .HasName("PK_User");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("User", "dbo");
                });

            modelBuilder.Entity("RealEstate.Core.Entities.Log", b =>
                {
                    b.OwnsOne("RealEstate.Core.Entities.DataMessage", "Message", b1 =>
                        {
                            b1.Property<long>("LogId")
                                .HasColumnType("bigint");

                            b1.Property<string>("InformationSystem")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("MessageContent")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("MessageDigest")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("MessageType")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SourceEntity")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SourceIp")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("UserName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("LogId");

                            b1.ToTable("Logs", "dbo");

                            b1.ToJson("Message");

                            b1.WithOwner()
                                .HasForeignKey("LogId");
                        });

                    b.Navigation("Message")
                        .IsRequired();
                });

            modelBuilder.Entity("RealEstate.Core.Entities.Property", b =>
                {
                    b.HasOne("RealEstate.Core.Entities.Owner", "Owner")
                        .WithMany()
                        .HasForeignKey("IdOwner")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("RealEstate.Core.Entities.PropertyImage", b =>
                {
                    b.HasOne("RealEstate.Core.Entities.Property", null)
                        .WithMany("Images")
                        .HasForeignKey("IdProperty")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Property_PropertyImage");
                });

            modelBuilder.Entity("RealEstate.Core.Entities.PropertyTrace", b =>
                {
                    b.HasOne("RealEstate.Core.Entities.Property", null)
                        .WithMany("Traces")
                        .HasForeignKey("IdProperty")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Property_PropertyTrace");
                });

            modelBuilder.Entity("RealEstate.Core.Entities.Property", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Traces");
                });
#pragma warning restore 612, 618
        }
    }
}
